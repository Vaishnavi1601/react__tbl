{"version":3,"sources":["components/ReadOnlyRow.js","components/EditableRow.js","App.js","index.js"],"names":["ReadOnlyRow","contact","handleEditClick","handleDeleteClick","firstName","lastName","email","role","address","type","onClick","event","EditableRow","editFormData","handleEditFormChange","handleCancelClick","required","placeholder","name","value","onChange","phonenumber","App","useState","mockdata","contacts","setContacts","setEditFormData","editContactId","setEditContactId","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","formValues","contactId","newContacts","index","findIndex","splice","className","onSubmit","editedContact","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4252d350.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ReadOnlyRow = ({contact,handleEditClick,handleDeleteClick}) => {\r\n    return (\r\n        <tr>\r\n               <td>{contact.firstName}</td>\r\n               <td>{contact.lastName}</td>\r\n               <td>{contact.email}</td>\r\n               <td>{contact.role}</td>\r\n               <td>{contact['phonenumber']}</td>\r\n               <td>{contact.address}</td>\r\n               <td>\r\n                   <button type=\"button\" onClick={(event) => handleEditClick(event,contact)}>Edit</button>\r\n                   <button type=\"button\" onClick={()=> handleDeleteClick(contact.firstName)}>Delete</button>\r\n                </td>\r\n        </tr>  \r\n    )\r\n}\r\n\r\nexport default ReadOnlyRow\r\n","import React from 'react'\r\n\r\nconst EditableRow = ({\r\n  editFormData,handleEditFormChange,handleCancelClick}) => {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <input \r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"FirstName\"\r\n          name=\"firstName\"\r\n          value={editFormData.firstName}\r\n          onChange={handleEditFormChange}\r\n          ></input>\r\n          </td>\r\n\r\n          <td>\r\n          <input \r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"LasttName\"\r\n          name=\"lastName\"\r\n          value={editFormData.lastName}\r\n          onChange={handleEditFormChange}\r\n          ></input>\r\n          </td>\r\n\r\n          <td><input \r\n          type=\"email\"\r\n          required=\"required\"\r\n          placeholder=\"Email\"\r\n          name=\"email\"\r\n          value={editFormData.email}\r\n          onChange={handleEditFormChange}\r\n          ></input></td>\r\n\r\n          <td><input \r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Role\"\r\n          name=\"role\"\r\n          value={editFormData.role}\r\n          onChange={handleEditFormChange}\r\n          ></input></td>\r\n\r\n          <td><input \r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"PhoneNumber\"\r\n          name=\"phonenumber\"\r\n          value={editFormData.phonenumber}\r\n          onChange={handleEditFormChange}\r\n          ></input></td>\r\n\r\n          <td><input \r\n          type=\"text\"\r\n          required=\"required\"\r\n          placeholder=\"Address\"\r\n          name=\"address\"\r\n          value={editFormData.address}\r\n          onChange={handleEditFormChange}\r\n          ></input>\r\n        </td>\r\n\r\n        <td>\r\n        <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={handleCancelClick}>Cancel</button>\r\n     \r\n      </td>\r\n      </tr>\r\n    )\r\n}\r\n\r\nexport default EditableRow\r\n","import React, {useState,Fragment}  from 'react';\nimport \"./App.css\";\nimport mockdata from \"./data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport EditableRow from \"./components/EditableRow\";\n\nconst App = () => {\n\n  const [contacts, setContacts] = useState(mockdata);\n  const [editFormData, setEditFormData] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    role: \"\",\n    phonenumber:\"\",\n    address:\"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\" );\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n  const editedContact = {\n      firstName: editContactId,\n      lastName: editFormData.lastName,\n      email: editFormData.email,\n      role: editFormData.role,\n      phonenumber: editFormData.phonenumber,\n      address: editFormData.address,\n      \n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.firstName === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.firstName);\n\n    const formValues = {\n      firstName: contact.firstName,\n      lastName: contact.lastName,\n      email: contact.email,\n      role: contact.role,\n      phonenumber: contact['phonenumber'],\n      address: contact.address\n    };\n\n    setEditFormData(formValues);\n}\n\nconst handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.firstName === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  }; \n  \n\nreturn (\n<div className = \"app-container\">\n<form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>First Name</th>\n          <th>Last Name</th>\n          <th>Email</th>\n          <th>Role</th>\n          <th>Phone Number</th>\n          <th>Address</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          contacts.map((contact) =>(\n            <Fragment>\n              {editContactId === contact.firstName ? (\n            <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}/>): \n                  (<ReadOnlyRow contact = {contact}\n                  handleEditClick={handleEditClick}\n                  handleDeleteClick={handleDeleteClick}/>\n                  )}\n            </Fragment>\n            ))\n        }\n        </tbody>\n    </table>\n  </form>   \n</div>\n  )\n};\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}